x-app: &app-proto
  build: 
    context: .
    args:
      - "RAILS_ENV=${RAILS_ENV:-production}"
  depends_on:
    - db
  env_file:
    - ".env"
  restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
  stop_grace_period: "3s"
  tty: true
  ports:
    - 3000:3000

services:
  app:
    <<: *app-proto

  db:
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_POSTGRES_CPUS:-0}"
          memory: "${DOCKER_POSTGRES_MEMORY:-0}"
    env_file:
      - ".env"
    environment:
      - "POSTGRES_USER=${ULTRA_TODO_DB_USER}"
      - "POSTGRES_PASSWORD=${ULTRA_TODO_DB_PASSWORD}"
    image: "postgres:14.2-bullseye"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "3s"
    volumes:
      - postgres:/var/lib/postgresql/data

  # redis:
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: ${DOCKER_REDIS_CPUS:-0}
  #         memory: ${DOCKER_REDIS_MEMORY:-0}
  #   env_file:
  #     - .env
  #   image: redis:7.0.0-bullseye
  #   restart: ${DOCKER_RESTART_POLICY:-unless-stopped}
  #   stop_grace_period: 3s
  #   volumes:
  #     - redis:/data

volumes:
  postgres:
